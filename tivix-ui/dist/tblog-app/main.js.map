{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/add-post/add-post.component.html","./src/app/app.component.html","./src/app/edit-post/edit-post.component.html","./src/app/posts/posts.component.html","./src/app/view-post/view-post.component.html","./src/app/add-post/add-post.component.scss","./src/app/add-post/add-post.component.ts","./src/app/app-routing.module.ts","./src/app/app.component.scss","./src/app/app.component.ts","./src/app/app.module.ts","./src/app/edit-post/edit-post.component.scss","./src/app/edit-post/edit-post.component.ts","./src/app/posts/posts.component.scss","./src/app/posts/posts.component.ts","./src/app/services/tvxsvc.service.ts","./src/app/view-post/view-post.component.scss","./src/app/view-post/view-post.component.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","module.exports = \"<div class=\\\"card border-primary\\\">\\n    <div class=\\\"card-header\\\">\\n        Add Post\\n        <span class=\\\"float-right\\\"><a class=\\\"btn btn-primary\\\" [routerLink]=\\\"'/postlist'\\\">Posts</a></span>\\n    </div>\\n    <div class=\\\"card-body\\\">\\n        <form [formGroup]=\\\"checkForm\\\" (ngSubmit)=\\\"onSubmit()\\\">\\n            <div class=\\\"form-group\\\">\\n                <label>Title</label>\\n                <input type=\\\"text\\\" formControlName=\\\"title\\\" class=\\\"form-control\\\"\\n                    [ngClass]=\\\"{ 'is-invalid': submitted && f.title.errors }\\\" />\\n                <div *ngIf=\\\"submitted && f.title.errors\\\" class=\\\"invalid-feedback\\\">\\n                    <div *ngIf=\\\"f.title.errors.required\\\">Title is required</div>\\n                </div>\\n            </div>\\n            <div class=\\\"form-group\\\">\\n                <label>Description</label>\\n                <textarea type=\\\"text\\\" formControlName=\\\"description\\\" rows=\\\"5\\\" class=\\\"form-control\\\"\\n                    [ngClass]=\\\"{ 'is-invalid': submitted && f.description.errors }\\\"></textarea>\\n                <div *ngIf=\\\"submitted && f.description.errors\\\" class=\\\"invalid-feedback\\\">\\n                    <div *ngIf=\\\"f.description.errors.required\\\">Description is required</div>\\n                </div>\\n            </div>\\n            <div class=\\\"form-group\\\">\\n                <button [disabled]=\\\"loading\\\" class=\\\"btn btn-primary\\\">Add</button><br>\\n\\n            </div>\\n        </form>\\n\\n    </div>\\n</div>\"","module.exports = \"<div class=\\\"container\\\">\\n<h1>\\n  T-Blog\\n</h1>\\n\\n<router-outlet>\\n  \\n</router-outlet>\\n\\n</div>\"","module.exports = \"<div class=\\\"card border-primary\\\">\\n        <div class=\\\"card-header\\\">\\n            Add Post\\n            <span class=\\\"float-right\\\"><a class=\\\"btn btn-primary\\\" [routerLink]=\\\"'/postlist'\\\">Posts</a></span>\\n        </div>\\n        <div class=\\\"card-body\\\">\\n            <form [formGroup]=\\\"checkForm\\\" (ngSubmit)=\\\"onSubmit()\\\">\\n                <div class=\\\"form-group\\\">\\n                    <label>Title</label>\\n                    <input type=\\\"text\\\" formControlName=\\\"title\\\" class=\\\"form-control\\\"\\n                        [ngClass]=\\\"{ 'is-invalid': submitted && f.title.errors }\\\" />\\n                    <div *ngIf=\\\"submitted && f.title.errors\\\" class=\\\"invalid-feedback\\\">\\n                        <div *ngIf=\\\"f.title.errors.required\\\">Title is required</div>\\n                    </div>\\n                </div>\\n                <div class=\\\"form-group\\\">\\n                    <label>Description</label>\\n                    <textarea type=\\\"text\\\" formControlName=\\\"description\\\" rows=\\\"5\\\" class=\\\"form-control\\\"\\n                        [ngClass]=\\\"{ 'is-invalid': submitted && f.description.errors }\\\"></textarea>\\n                    <div *ngIf=\\\"submitted && f.description.errors\\\" class=\\\"invalid-feedback\\\">\\n                        <div *ngIf=\\\"f.description.errors.required\\\">Description is required</div>\\n                    </div>\\n                </div>\\n                <div class=\\\"form-group\\\">\\n                    <button [disabled]=\\\"loading\\\" class=\\\"btn btn-primary\\\">Save</button><br>\\n    \\n                </div>\\n            </form>\\n    \\n        </div>\\n    </div>\"","module.exports = \"<div class=\\\"card border-primary\\\">\\n<div class=\\\"card-header\\\">\\n    Posts\\n    <span class=\\\"float-right\\\"><a class=\\\"btn btn-primary\\\" [routerLink]=\\\"'/addpost'\\\">Add Post</a></span>\\n    \\n</div>\\n<table class=\\\"table table-hover\\\">\\n    <thead>\\n      <tr>\\n        <th scope=\\\"col\\\">Post Id</th>\\n        <th scope=\\\"col\\\">Title</th>\\n        <th scope=\\\"col\\\">Date</th>\\n        <th scope=\\\"col\\\"></th>\\n      </tr>\\n    </thead>\\n    <tbody>\\n      <tr *ngFor=\\\"let item of plist\\\">\\n        <th scope=\\\"row\\\">{{item.id}}</th>\\n        <td>{{item.title}}</td>\\n        <td>{{item.created}}</td>\\n        <td>\\n                <a type=\\\"button\\\" class=\\\"btn btn-secondary btn-sm mr-1\\\" [routerLink]=\\\"'/viewpost/'+item.id\\\">View</a>\\n                <a type=\\\"button\\\" class=\\\"btn btn-secondary btn-sm mr-1\\\" [routerLink]=\\\"'/editpost/'+item.id\\\">Edit</a>\\n                <button type=\\\"button\\\" class=\\\"btn btn-secondary btn-sm mr-1\\\" (click)=\\\"delete(item.id)\\\">Delete</button>\\n        </td>\\n      </tr>\\n    </tbody>\\n  </table>\\n</div>\"","module.exports = \"<div class=\\\"card border-primary\\\">\\n    <div class=\\\"card-header\\\">\\n        Post\\n\\n        <span class=\\\"float-right\\\">\\n            <a class=\\\"btn btn-primary mr-1\\\" [routerLink]=\\\"'/postlist'\\\">Posts</a>\\n            <a class=\\\"btn btn-primary\\\" [routerLink]=\\\"'/editpost/'+post.id\\\">Edit</a>\\n        </span>\\n        \\n\\n    </div>\\n    <div class=\\\"card-body\\\">\\n        <h5 class=\\\"card-title\\\">{{post.title}}</h5>\\n        <p class=\\\"card-text\\\">{{post.description}}</p>\\n    </div>\\n    <div class=\\\"card-footer\\\">{{post.created}}</div>\\n</div>\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FkZC1wb3N0L2FkZC1wb3N0LmNvbXBvbmVudC5zY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { TvxsvcService } from '../services/tvxsvc.service';\n\n@Component({\n  selector: 'app-add-post',\n  templateUrl: './add-post.component.html',\n  styleUrls: ['./add-post.component.scss']\n})\nexport class AddPostComponent implements OnInit {\n\n  checkForm;\n  submitted = false;\n  constructor(private formBuilder: FormBuilder,\n    private router: Router, private http: TvxsvcService) {\n    this.checkForm = this.formBuilder.group({\n      title: ['', [Validators.required]],\n      description: ['', [Validators.required]]\n    });\n   }\n\n  ngOnInit() {\n  }\n\n  get f() { return this.checkForm.controls; }\n\n  onSubmit() {\n      this.submitted = true;\n\n      // stop here if form is invalid\n      if (this.checkForm.invalid) {\n          return;\n      }\n      \n      // alert('SUCCESS!! :-)')\n      this.http.addPost(this.checkForm.value).subscribe(data =>{\n        this.navigateToStats();\n      })\n\n  }\n  navigateToStats() {\n    this.router.navigate(['postlist'])\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { PostsComponent } from './posts/posts.component';\nimport { AddPostComponent } from './add-post/add-post.component';\nimport { EditPostComponent } from './edit-post/edit-post.component';\nimport { ViewPostComponent } from './view-post/view-post.component';\n\n\nconst routes: Routes = [\n  {path: '', redirectTo: 'postlist', pathMatch: 'full' },\n  {path: 'addpost', component: AddPostComponent},\n  {path: 'viewpost/:pid', component: ViewPostComponent},\n  {path: 'postlist', component: PostsComponent},\n  {path: 'editpost/:pid', component: EditPostComponent},\n\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\n\nexport class AppRoutingModule { }\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\n\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\nimport { PostsComponent } from './posts/posts.component';\nimport { AddPostComponent } from './add-post/add-post.component';\nimport { EditPostComponent } from './edit-post/edit-post.component';\nimport { ViewPostComponent } from './view-post/view-post.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    PostsComponent,\n    AddPostComponent,\n    EditPostComponent,\n    ViewPostComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    ReactiveFormsModule,\n    HttpClientModule\n  ],\n  entryComponents:[],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2VkaXQtcG9zdC9lZGl0LXBvc3QuY29tcG9uZW50LnNjc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, Validators } from '@angular/forms';\nimport { TvxsvcService } from '../services/tvxsvc.service';\nimport { Router, ActivatedRoute } from '@angular/router';\n\n@Component({\n  selector: 'app-edit-post',\n  templateUrl: './edit-post.component.html',\n  styleUrls: ['./edit-post.component.scss']\n})\nexport class EditPostComponent implements OnInit {\n\n  pid: number;\n  checkForm;\n  submitted = false;\n  constructor(private formBuilder: FormBuilder, private route: ActivatedRoute,\n    private router: Router, private http: TvxsvcService) {\n    this.checkForm = this.formBuilder.group({\n      title: ['', [Validators.required]],\n      description: ['', [Validators.required]],\n    });\n    this.route.params.subscribe(params => {\n      this.pid = params.pid;\n    })\n   }\n\n  ngOnInit() {\n    this.http.getPost(this.pid).subscribe(data =>{\n      let fdata = data ? data[0] : {};\n\n      this.checkForm.setValue( {title: fdata.title, description: fdata.description});\n    })\n  }\n\n  get f() { return this.checkForm.controls; }\n\n  onSubmit() {\n      this.submitted = true;\n\n      // stop here if form is invalid\n      if (this.checkForm.invalid) {\n          return;\n      }\n      \n      // alert('SUCCESS!! :-)')\n      this.http.savePost(this.pid, this.checkForm.value).subscribe(data =>{\n        this.navigateToStats();\n      })\n\n  }\n  navigateToStats() {\n    this.router.navigate(['postlist'])\n  }\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3Bvc3RzL3Bvc3RzLmNvbXBvbmVudC5zY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\nimport { TvxsvcService } from '../services/tvxsvc.service';\n\n@Component({\n  selector: 'app-posts',\n  templateUrl: './posts.component.html',\n  styleUrls: ['./posts.component.scss']\n})\nexport class PostsComponent implements OnInit {\n\n  plist: any[];\n  constructor(private httpsvc: TvxsvcService) { }\n\n  ngOnInit() {\n    this.loadPosts();\n  }\n  loadPosts(){\n    this.httpsvc.getPostList().subscribe(data =>{\n      this.plist = data;\n    })\n  }\n\n  delete(pid:number) {\n    this.httpsvc.delete(pid).subscribe(data=>{\n      this.loadPosts();\n    })\n  }\n\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { HttpClient } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TvxsvcService {\n  baseUrl = \"http://localhost:8080\";\n\n  constructor(private http: HttpClient) {\n  };\n\n  getPostList(): Observable<any>{\n    return this.http.get(this.baseUrl+\"/api/posts/\");\n  };\n  getPost(postid: number): Observable<any>{\n    return this.http.get(this.baseUrl+\"/api/posts/\"+postid.toString());\n  };\n  addPost(post: any): Observable<any>{\n    return this.http.post(this.baseUrl+\"/api/posts/\", post);\n  };\n  savePost(postid: number, post: any): Observable<any>{\n    return this.http.put(this.baseUrl+\"/api/posts/\"+postid.toString(), post);\n  };\n  delete(postid: number): Observable<any>{\n    return this.http.delete(this.baseUrl+\"/api/posts/\"+postid.toString());\n  };\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3ZpZXctcG9zdC92aWV3LXBvc3QuY29tcG9uZW50LnNjc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\nimport { TvxsvcService } from '../services/tvxsvc.service';\nimport { ActivatedRoute } from '@angular/router';\n\n@Component({\n  selector: 'app-view-post',\n  templateUrl: './view-post.component.html',\n  styleUrls: ['./view-post.component.scss']\n})\nexport class ViewPostComponent implements OnInit {\n\n  post: any;\n  pid: number;\n\n  constructor(private http: TvxsvcService, private route: ActivatedRoute) { \n    this.route.params.subscribe(params => {\n      this.pid = params.pid;\n    })\n  }\n\n  ngOnInit() {\n    this.http.getPost(this.pid).subscribe(data =>{\n      this.post = data ? data[0] : {};\n    })\n  }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}